name: "🎹 Development"

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - 'feature/**'
      - 'fix/**'
      - 'release/**'

jobs:
  modpack-info:
    runs-on: ubuntu-latest
    outputs:
      projectname: ${{ steps.info.outputs.projectname }}
      version: ${{ steps.info.outputs.version }}
    name: "📙 Modpack Info"
    steps:
      - name: "🔁 Checkout"
        uses: actions/checkout@v3
      - name: "💾 Get modpack info"
        id: info
        run: |
            manifestjson=`cat ./modpack/manifest.json`
            projectname=`echo $(jq -r '.name' <<< "$manifestjson")`
            echo "projectname=$projectname" >> $GITHUB_OUTPUT
            version=`echo $(jq -r '.minecraft.version' <<< "$manifestjson")`
            echo "version=$version" >> $GITHUB_OUTPUT

  changelog:
    runs-on: ubuntu-latest
    name: "📜 Changelog"
    outputs:
      changelog: ${{steps.changelog.outputs.changelog}}
    steps:
      - name: "🔁 Checkout"
        uses: actions/checkout@v3
      - name: "✍️ Write changelog"
        id: changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          output: CHANGELOG.md
          stripGeneratorNotice: true
      - name: "💽 Save changelog"
        uses: actions/upload-artifact@v2
        with:
          name: modpack
          path: CHANGELOG.md

  modlist:
    runs-on: ubuntu-latest
    name: "🗒️ Modlist"
    steps:
      - name: "🔁 Checkout"
        uses: actions/checkout@v3
      - name: "☕ Setup Java"
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: "⚾ Setup ModListCreator"
        uses: wei/wget@v1.1.1
        with:
          args: ${{ secrets.MODLISTCREATOR_URL }}
      - name: "📫 Create list"
        run: java -jar ${{ secrets.MODLISTCREATOR_FILE }} --manifest .\modpack\manifest.json --output . --md
      - name: "💽 Save modlist"
        uses: actions/upload-artifact@v2
        with:
          name: modpack
          path: modlist.md

  build_pack:
    runs-on: ubuntu-latest
    needs: [changelog, modpack-info]
    name: "📦 Build"
    steps:
      - name: "🔁 Checkout"
        uses: actions/checkout@v3
      - name: "🚀 Download PAX"
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: froehlichA/pax
          file: "pax"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: "🚢 Export modpack"
        run: |
          sudo chmod +x ./pax
          ./pax export
      - name: "🏹 Rename zip"
        run: |
          mv .out/${{ needs.modpack-info.outputs.projectname }}.zip .out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.version }}.zip
      - name: "🚚 Unpack zip"
        run: unzip .out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.version }}.zip -d .out
      - name: "🗑️ Delete main zip"
        run: rm .out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.version }}.zip
      - name: "🔼 Upload zip"
        uses: actions/upload-artifact@v2
        with:
          name: modpack
          path: .out/*
      - name: "🔼 Upload Server zip"
        uses: actions/upload-artifact@v2
        with:
          name: server
          path: serverpack/*

  build_image:
    runs-on: ubuntu-latest
    needs: [build_pack, modpack-info]
    name: "🐳 Build Package"
    steps:
      - name: "🔁 Checkout"
        uses: actions/checkout@v3
      - name: "🔽 Download modpack"
        uses: actions/download-artifact@v2
        with:
          name: modpack
      - name: "🖨️ Change Docker Config Version"
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'dockerfiles/docker-setup-config.yaml'
          propertyPath: 'install.modpackUrl'
          value: file://./${{ needs.modpack-info.outputs.tag }}/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
          commitChange: false
          updateFile: true
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/unately/ubingo:dev

  # discord_message:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   name: "🦞 Post to Discord"
  #   steps:
  #     - name: "🔁 Checkout"
  #       uses: actions/checkout@v3
  #     - name: "👋🏻 Post in #news"
  #       uses: tsickert/discord-webhook@v4.0.0
  #       with:
  #         webhook-url: ${{ secrets.WEBHOOK_URL }}
  #         embed-author-name: "GitHub"
  #         embed-author-url: "https://github.com/Unately/uBingo"
  #         embed-color: 3696598
  #         embed-title: "uBingo ${{ needs.modpack-info.outputs.tag }} Released! 🎉"
  #         embed-description: "We released version ${{ needs.modpack-info.outputs.tag }} of the uBingo modpack.\n\nYou can now update it in Curseforge, GDLauncher etc.\n\nhttps://github.com/Unately/uBingo/releases"
  #         embed-timestamp: "2008-03-13T19:14:00.000Z"
  #         embed-footer-text: "Unately"
  #         embed-thumbnail-url: "https://i.ibb.co/9cr792q/asd.png"
  #         filename: modlist.md
