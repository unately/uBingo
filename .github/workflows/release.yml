name: "🍺 Release Build"

on:
  push:
    tags:
      - 'v*'

env:
  PROJECT_ID: "572984"

jobs:
  modpack-info:
    runs-on: ubuntu-latest
    outputs:
      projectname: ${{ steps.info.outputs.projectname }}
      version: ${{ steps.info.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    name: "📙 Modpack Info"
    steps:
      - name: "🔁 Checkout"
        uses: actions/checkout@v2
      - name: "📛 Get tag"
        id: version
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
      - name: "📯 Change manifest"
        uses: MerthinTechnologies/edit-json-action@v1
        with:
          filename: './modpack/manifest.json'
          key: 'version'
          value: '${{ steps.version.outputs.tag }}'
      # TODO: Auto commit manifest 
      - name: "💾 Get modpack info"
        id: info
        run: |
            manifestjson=`cat ./modpack/manifest.json`
            projectname=`echo $(jq -r '.name' <<< "$manifestjson")`
            echo "::set-output name=projectname::$projectname"
            version=`echo $(jq -r '.minecraft.version' <<< "$manifestjson")`
            echo "::set-output name=version::$version"

  changelog:
    runs-on: ubuntu-latest
    name: "📜 Changelog"
    outputs:
      changelog: ${{steps.changelog.outputs.changelog}}
    steps:
      - name: "🔁 Checkout"
        uses: actions/checkout@v2
      - name: "✍️ Write Changelogs"
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v2.7.2
        env:
          GITHUB_TOKEN: ${{ secrets.UNATELYBOT_KEY }}

  build_pack:
    runs-on: ubuntu-latest
    needs: [changelog, modpack-info]
    name: "📦 Build Pack"
    steps:
      - name: "🔁 Checkout"
        uses: actions/checkout@v2
      - name: "🚀 Download PAX"
        uses: dsaltares/fetch-gh-release-asset@1.0.0
        with:
          repo: froehlichA/pax
          file: "pax"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: "🧧 Change Modpack Config"
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: 'modpack/overrides/config/bcc-common.toml'
          key: 'general.modpackVersion'
          value: "${{ steps.version.outputs.tag }}"
      - name: "🚢 Export modpack"
        run: |
          sudo chmod +x ./pax
          ./pax export
      - name: "🖨️ Change Server Config 1/2"
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'serverpack/server-setup-config.yaml'
          propertyPath: 'install.modpackUrl'
          value: https://github.com/Unately/uBingo/releases/download/${{ needs.modpack-info.outputs.tag }}/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
          commitChange: true
          message: "⚙️ Update Server Pack URL"
          token: ${{ secrets.UNATELYBOT_KEY }}
          updateFile: true
          commitUserName: ${{ secrets.UNATELYBOT_USERNAME }}
          commitUserEmail: ${{ secrets.UNATELYBOT_EMAIL }}
      - name: "🖨️ Change Server Config 2/2"
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'serverpack/server-setup-config.yaml'
          propertyPath: 'install.mcVersion'
          value: ${{ needs.modpack-info.outputs.version }}
          commitChange: true
          message: "⚙️ Update Server Minecraft Version"
          token: ${{ secrets.UNATELYBOT_KEY }}
          updateFile: true
          commitUserName: ${{ secrets.UNATELYBOT_USERNAME }}
          commitUserEmail: ${{ secrets.UNATELYBOT_EMAIL }}
      - name: "🐙 Export server: Step 1/2"
        run: mv serverpack/* .
      - name: "🐙 Export server: Step 2/2"
        run: zip ${{ needs.modpack-info.outputs.projectname }}-Server-${{ needs.modpack-info.outputs.tag }}.zip startserver.* server-setup-config.yaml server.propeties server-icon.png
      - name: "🏹 Rename zip"
        run: |
          mv .out/${{ needs.modpack-info.outputs.projectname }}.zip .out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
      - name: "🔼 Upload zip"
        uses: actions/upload-artifact@v2
        with:
          name: modpack
          path: .out/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
      - name: "🔼 Upload server zip"
        uses: actions/upload-artifact@v2
        with:
          name: server
          path: ${{ needs.modpack-info.outputs.projectname }}-Server-${{ needs.modpack-info.outputs.tag }}.zip

  build_image:
    runs-on: ubuntu-latest
    needs: [build_pack, modpack-info]
    name: "🐳 Build Package"
    steps:
      - name: "🔁 Checkout"
        uses: actions/checkout@v2
      - name: "🔽 Download modpack"
        uses: actions/download-artifact@v2
        with:
          name: modpack
      - name: "🖨️ Change Docker Config Version"
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'dockerfiles/docker-setup-config.yaml'
          propertyPath: 'install.modpackUrl'
          value: file://./${{ needs.modpack-info.outputs.tag }}/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
          commitChange: false
          updateFile: true
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/unately/ubingo:latest
            ghcr.io/unately/ubingo:${{ needs.modpack-info.outputs.tag }}
  release-github:
    runs-on: ubuntu-latest
    needs: [build_pack, changelog, modpack-info]
    name: "🐙 Release to Github"
    steps:
      - name: "🔽 Download modpack"
        uses: actions/download-artifact@v2
        with:
          name: modpack
      - name: "⏬ Download serverpack"
        uses: actions/download-artifact@v2
        with:
          name: server
      - name: "🥨 Get release type"
        id: release-type
        run: |
          rel_type="release"
          case "${{ needs.modpack-info.outputs.tag }}" in
            *alpha*) rel_type="true" ;;
            *beta*) rel_type="true" ;;
            *) rel_type="false" ;;
          esac
          echo "::set-output name=type::$rel_type"
      - name: "🧬 Create release"
        uses: softprops/action-gh-release@v1
        with:
          body_path: ${{ steps.changelog.outputs.changelog }}
          prerelease: ${{ steps.release-type.outputs.type }}
          files: |
            ${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
            ${{ needs.modpack-info.outputs.projectname }}-Server-${{ needs.modpack-info.outputs.tag }}.zip
          token: ${{ secrets.UNATELYBOT_KEY }}
  
  release-curseforge:
    runs-on: ubuntu-latest
    needs: [build_pack, build_image, changelog, modpack-info]
    name: "🔨 Release to Curseforge"
    steps:
      - name: "🔽 Download modpack"
        uses: actions/download-artifact@v2
        with:
          name: modpack
      - name: "⏬ Download serverpack"
        uses: actions/download-artifact@v2
        with:
          name: server
      - name: "🥨 Get release type"
        id: release-type
        run: |
          rel_type="release"
          case "${{ needs.modpack-info.outputs.tag }}" in
            *alpha*) rel_type="alpha" ;;
            *beta*) rel_type="beta" ;;
            *) rel_type="release" ;;
          esac
          echo "::set-output name=type::$rel_type"
      - name: "🛠️ Upload modpack"
        id: modpack-upload
        uses: itsmeow/curseforge-upload@v3
        with:
          project_id: ${{ env.PROJECT_ID }}
          game_endpoint: minecraft
          file_path: ${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
          display_name: "${{ needs.modpack-info.outputs.tag }}"
          changelog: "${{ needs.changelog.outputs.changelog }}"
          changelog_type: markdown
          game_versions: "Minecraft ${{ needs.modpack-info.outputs.version }}"
          release_type: ${{ steps.release-type.outputs.type }}
          token: ${{ secrets.CURSEFORGE_TOKEN }}
      - name: "👾 Upload serverpack"
        uses: itsmeow/curseforge-upload@v3
        with:
          project_id: ${{ env.PROJECT_ID }}
          game_endpoint: minecraft
          file_path: ${{ needs.modpack-info.outputs.projectname }}-Server-${{ needs.modpack-info.outputs.tag }}.zip
          game_versions: "Minecraft ${{ needs.modpack-info.outputs.version }}"
          release_type: ${{ steps.release-type.outputs.type }}
          parent_file_id: ${{ steps.modpack-upload.outputs.id }}
          token: ${{ secrets.CURSEFORGE_TOKEN }}

  discord_message:
    runs-on: ubuntu-latest
    needs: [release-github, release-curseforge]
    name: "🦞 Post to Discord"
    steps:
      - name: "👋🏻 Post in #news"
        uses: tsickert/discord-webhook@v4.0.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          embed-author-name: "GitHub"
          embed-author-url: "https://github.com/Unately/uBingo"
          embed-color: 3696598
          embed-title: "uBingo ${{ needs.modpack-info.outputs.tag }} Released! 🎉"
          embed-description: "We released version ${{ needs.modpack-info.outputs.tag }} of the uBingo modpack.\n\nYou can now update it in Curseforge, GDLauncher etc.\n\nhttps://github.com/Unately/uBingo/releases"
          embed-timestamp: "2008-03-13T19:14:00.000Z"
          embed-footer-text: "Unately"
          embed-thumbnail-url: "https://i.ibb.co/9cr792q/asd.png"
